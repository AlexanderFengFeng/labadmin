#!/usr/bin/env python

from __future__ import division

from os import makedirs
from os.path import join

import click

from knimin.lib.util import combine_barcodes
from knimin import db

__author__ = "Adam Robbins-Pianka"
__copyright__ = "Copyright 2009-2015, QIIME Web Analysis"
__credits__ = ["Adam Robbins-Pianka"]
__license__ = "GPL"
__version__ = "1.0.0"
__maintainer__ = ["Adam Robbins-Pianka"]
__email__ = "adam.robbinspianka@colorado.edu"
__status__ = "Development"


@click.group()
def cli():
    """All commands in this click group will be available at the top level
    """
    pass


@cli.command()
@click.option('-i', '--input-file', required=False,
              type=click.File('U'),
              help="Path to file containing barcodes, one per line")
@click.option('-o', '--output-dir', required=True,
              type=click.Path(exists=False, readable=True, writable=True))
@click.argument('barcodes', nargs=-1)
def pulldown(input_file, output_dir, barcodes):
    if not barcodes and input_file is None:
        click.echo("You must specify either an input file (-i) or at least "
                   "one barcode")

    all_barcodes = combine_barcodes(barcodes, input_file)

    makedirs(output_dir)

    all_results = db.get_barcode_metadata(all_barcodes)

    # keep track of which barcodes were seen so we know which were never seen
    barcodes_seen = set()

    for survey, barcodes_responses in all_results.items():
        headers = sorted(barcodes_responses.values()[0])

        with open(join(output_dir,
                       'survey_%d_md.txt' % survey), 'w') as outfile:
            outfile.write('#SampleID\t' + '\t'.join(headers) + '\n')
            for barcode, shortnames_answers in \
                    sorted(barcodes_responses.items()):
                barcodes_seen.add(barcode)
                ordered_answers = [shortnames_answers[h] for h in headers]
                ordered_answers = '\t'.join(ordered_answers)
                outfile.write('\t'.join([barcode, ordered_answers]) + '\n')

    failures = all_barcodes - barcodes_seen
    if failures:
        click.echo("The following barcodes were not retrieved for any survey:"
                   "\n%s\n" % '\n'.join(sorted(failures)))


if __name__ == '__main__':
    cli()
